<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /x////+P////w////+P////j////+/////8=
</value>
  </data>
</root>